name: Electron App Build

on:
  push:
    tags:
      - 'v*' # Now triggers only when a new tag like v1.0.0 is pushed

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies (root)
        run: npm ci
      - name: Install React app dependencies
        run: npm ci --prefix app
      - name: Build React App
        run: npm run build --prefix app
      - name: Create build-app directory (if using custom script)
        run: node scripts/prepare-app.js 2>&1 | tee prepare-app-log.txt
      - name: Upload prepare-app log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: prepare-app-script-log
          path: prepare-app-log.txt
      - name: Build Electron App (macOS)
        if: runner.os == 'macOS'
        run: npm run dist -- --mac dmg --universal --publish never
      - name: Build Electron App (Windows)
        if: runner.os == 'Windows'
        run: npm run dist -- --win nsis --x64 --publish never
      - name: Upload Artifacts (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: macOS-build
          path: release/*.dmg
      - name: Upload Artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: Windows-build
          path: release/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' # Now triggers only if a tag (e.g., v1.0.0) was pushed
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifacts/macOS-build/*.dmg
            artifacts/Windows-build/*.exe
          name: Release ${{ github.ref_name }} # Uses the actual tag name for the release name
          tag_name: ${{ github.ref_name }}     # Uses the actual tag name for the GitHub release tag
          body: |
            # Password Vault ${{ github.ref_name }}

            This is a new release of the Password Vault application.

            **Features:**
            - Secure master password setup and login
            - Local password storage with strong encryption
            - Add, edit, and delete password entries
            - Copy username and password to clipboard (auto-clears after 15 seconds)
            - Search and filter password entries
            - Forgot Password feature (resets master password and clears old vault data)
            - Light/Dark mode toggle
            - About screen

            **Download below:**
            - `Password Vault.dmg` for macOS
            - `Password Vault Setup.exe` for Windows

            Please report any issues on the GitHub repository.
          draft: false      # Set to false to publish the release immediately
          prerelease: false # Set to false for a stable release
